{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/MoussMouss/src/Components/Mousse/Mousse.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Mousse.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mousse() {\n  _s();\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const numberOfDrops = 500;\n  const drops = [];\n  for (let i = 0; i < numberOfDrops; i++) {\n    // Generate random left and top positions within the window size\n    const leftPosition = Math.random() * windowSize.width + 'px';\n    const topPosition = Math.random() * windowSize.height + 'px';\n\n    // Generate random size for the drop between 50px and 200px\n    const size = Math.random() * (200 - 50) + 50;\n\n    // Alternate between drop1 and drop2 classes based on index\n    const dropClass = `drop drop${i % 2 === 0 ? 1 : 2}`;\n\n    // Create drop component with random position, size, and class\n    drops.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dropClass,\n      style: {\n        left: leftPosition,\n        top: topPosition,\n        width: size + 'px',\n        height: size + 'px'\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c\",\n    children: drops\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n_s(Mousse, \"Qzj2RskDuUQJ+boeJ9kz4svfpFU=\");\n_c = Mousse;\nexport default Mousse;\nvar _c;\n$RefreshReg$(_c, \"Mousse\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Mousse","_s","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener","numberOfDrops","drops","i","leftPosition","Math","random","topPosition","size","dropClass","push","className","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/MoussMouss/src/Components/Mousse/Mousse.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Mousse.css';\n\nfunction Mousse() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const numberOfDrops = 500; \n  const drops = [];\n  for (let i = 0; i < numberOfDrops; i++) {\n    // Generate random left and top positions within the window size\n    const leftPosition = Math.random() * windowSize.width + 'px';\n    const topPosition = Math.random() * windowSize.height + 'px';\n\n    // Generate random size for the drop between 50px and 200px\n    const size = Math.random() * (200 - 50) + 50;\n\n    // Alternate between drop1 and drop2 classes based on index\n    const dropClass = `drop drop${i % 2 === 0 ? 1 : 2}`;\n\n    // Create drop component with random position, size, and class\n    drops.push(\n      <div\n        key={i}\n        className={dropClass}\n        style={{\n          left: leftPosition,\n          top: topPosition,\n          width: size + 'px',\n          height: size + 'px',\n        }}\n      ></div>\n    );\n  }\n\n  return <div className=\"c\">{drops}</div>;\n}\n\nexport default Mousse;\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC;IAC3CO,KAAK,EAAEC,MAAM,CAACC,UAAU;IACxBC,MAAM,EAAEF,MAAM,CAACG;EACjB,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAGA,CAAA,KAAM;MACzBN,aAAa,CAAC;QACZC,KAAK,EAAEC,MAAM,CAACC,UAAU;QACxBC,MAAM,EAAEF,MAAM,CAACG;MACjB,CAAC,CAAC;IACJ,CAAC;IAEDH,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXJ,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAG,GAAG;EACzB,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGf,UAAU,CAACE,KAAK,GAAG,IAAI;IAC5D,MAAMc,WAAW,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGf,UAAU,CAACK,MAAM,GAAG,IAAI;;IAE5D;IACA,MAAMY,IAAI,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE;;IAE5C;IACA,MAAMG,SAAS,GAAI,YAAWN,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,EAAC;;IAEnD;IACAD,KAAK,CAACQ,IAAI,eACRtB,OAAA;MAEEuB,SAAS,EAAEF,SAAU;MACrBG,KAAK,EAAE;QACLC,IAAI,EAAET,YAAY;QAClBU,GAAG,EAAEP,WAAW;QAChBd,KAAK,EAAEe,IAAI,GAAG,IAAI;QAClBZ,MAAM,EAAEY,IAAI,GAAG;MACjB;IAAE,GAPGL,CAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQF,CACR,CAAC;EACH;EAEA,oBAAO9B,OAAA;IAAKuB,SAAS,EAAC,GAAG;IAAAQ,QAAA,EAAEjB;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzC;AAAC5B,EAAA,CAlDQD,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAoDf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}