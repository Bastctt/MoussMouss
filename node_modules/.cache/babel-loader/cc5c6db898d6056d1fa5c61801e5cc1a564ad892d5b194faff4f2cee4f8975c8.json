{"ast":null,"code":"import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport * as MathUtils from '../math/MathUtils.js';\nlet _object3DId = 0;\nconst _v1 = /*@__PURE__*/new Vector3();\nconst _q1 = /*@__PURE__*/new Quaternion();\nconst _m1 = /*@__PURE__*/new Matrix4();\nconst _target = /*@__PURE__*/new Vector3();\nconst _position = /*@__PURE__*/new Vector3();\nconst _scale = /*@__PURE__*/new Vector3();\nconst _quaternion = /*@__PURE__*/new Quaternion();\nconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\nconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\nconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\nconst _addedEvent = {\n  type: 'added'\n};\nconst _removedEvent = {\n  type: 'removed'\n};\nclass Object3D extends EventDispatcher {\n  constructor() {\n    super();\n    this.isObject3D = true;\n    Object.defineProperty(this, 'id', {\n      value: _object3DId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DEFAULT_UP.clone();\n    const position = new Vector3();\n    const rotation = new Euler();\n    const quaternion = new Quaternion();\n    const scale = new Vector3(1, 1, 1);\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n    rotation._onChange(onRotationChange);\n    quaternion._onChange(onQuaternionChange);\n    Object.defineProperties(this, {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n    this.matrixWorldNeedsUpdate = false;\n    this.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.animations = [];\n    this.userData = {};\n  }\n  onBeforeRender( /* renderer, scene, camera, geometry, material, group */) {}\n  onAfterRender( /* renderer, scene, camera, geometry, material, group */) {}\n  applyMatrix4(matrix) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    this.matrix.premultiply(matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  }\n  applyQuaternion(q) {\n    this.quaternion.premultiply(q);\n    return this;\n  }\n  setRotationFromAxisAngle(axis, angle) {\n    // assumes axis is normalized\n\n    this.quaternion.setFromAxisAngle(axis, angle);\n  }\n  setRotationFromEuler(euler) {\n    this.quaternion.setFromEuler(euler, true);\n  }\n  setRotationFromMatrix(m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    this.quaternion.setFromRotationMatrix(m);\n  }\n  setRotationFromQuaternion(q) {\n    // assumes q is normalized\n\n    this.quaternion.copy(q);\n  }\n  rotateOnAxis(axis, angle) {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n\n    _q1.setFromAxisAngle(axis, angle);\n    this.quaternion.multiply(_q1);\n    return this;\n  }\n  rotateOnWorldAxis(axis, angle) {\n    // rotate object on axis in world space\n    // axis is assumed to be normalized\n    // method assumes no rotated parent\n\n    _q1.setFromAxisAngle(axis, angle);\n    this.quaternion.premultiply(_q1);\n    return this;\n  }\n  rotateX(angle) {\n    return this.rotateOnAxis(_xAxis, angle);\n  }\n  rotateY(angle) {\n    return this.rotateOnAxis(_yAxis, angle);\n  }\n  rotateZ(angle) {\n    return this.rotateOnAxis(_zAxis, angle);\n  }\n  translateOnAxis(axis, distance) {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n\n    _v1.copy(axis).applyQuaternion(this.quaternion);\n    this.position.add(_v1.multiplyScalar(distance));\n    return this;\n  }\n  translateX(distance) {\n    return this.translateOnAxis(_xAxis, distance);\n  }\n  translateY(distance) {\n    return this.translateOnAxis(_yAxis, distance);\n  }\n  translateZ(distance) {\n    return this.translateOnAxis(_zAxis, distance);\n  }\n  localToWorld(vector) {\n    this.updateWorldMatrix(true, false);\n    return vector.applyMatrix4(this.matrixWorld);\n  }\n  worldToLocal(vector) {\n    this.updateWorldMatrix(true, false);\n    return vector.applyMatrix4(_m1.copy(this.matrixWorld).invert());\n  }\n  lookAt(x, y, z) {\n    // This method does not support objects having non-uniformly-scaled parent(s)\n\n    if (x.isVector3) {\n      _target.copy(x);\n    } else {\n      _target.set(x, y, z);\n    }\n    const parent = this.parent;\n    this.updateWorldMatrix(true, false);\n    _position.setFromMatrixPosition(this.matrixWorld);\n    if (this.isCamera || this.isLight) {\n      _m1.lookAt(_position, _target, this.up);\n    } else {\n      _m1.lookAt(_target, _position, this.up);\n    }\n    this.quaternion.setFromRotationMatrix(_m1);\n    if (parent) {\n      _m1.extractRotation(parent.matrixWorld);\n      _q1.setFromRotationMatrix(_m1);\n      this.quaternion.premultiply(_q1.invert());\n    }\n  }\n  add(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n      return this;\n    }\n    if (object === this) {\n      console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n      return this;\n    }\n    if (object && object.isObject3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n      object.parent = this;\n      this.children.push(object);\n      object.dispatchEvent(_addedEvent);\n    } else {\n      console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n    }\n    return this;\n  }\n  remove(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n      return this;\n    }\n    const index = this.children.indexOf(object);\n    if (index !== -1) {\n      object.parent = null;\n      this.children.splice(index, 1);\n      object.dispatchEvent(_removedEvent);\n    }\n    return this;\n  }\n  removeFromParent() {\n    const parent = this.parent;\n    if (parent !== null) {\n      parent.remove(this);\n    }\n    return this;\n  }\n  clear() {\n    return this.remove(...this.children);\n  }\n  attach(object) {\n    // adds object as a child of this, while maintaining the object's world transform\n\n    // Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n    this.updateWorldMatrix(true, false);\n    _m1.copy(this.matrixWorld).invert();\n    if (object.parent !== null) {\n      object.parent.updateWorldMatrix(true, false);\n      _m1.multiply(object.parent.matrixWorld);\n    }\n    object.applyMatrix4(_m1);\n    this.add(object);\n    object.updateWorldMatrix(false, true);\n    return this;\n  }\n  getObjectById(id) {\n    return this.getObjectByProperty('id', id);\n  }\n  getObjectByName(name) {\n    return this.getObjectByProperty('name', name);\n  }\n  getObjectByProperty(name, value) {\n    if (this[name] === value) return this;\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      const object = child.getObjectByProperty(name, value);\n      if (object !== undefined) {\n        return object;\n      }\n    }\n    return undefined;\n  }\n  getObjectsByProperty(name, value) {\n    let result = [];\n    if (this[name] === value) result.push(this);\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const childResult = this.children[i].getObjectsByProperty(name, value);\n      if (childResult.length > 0) {\n        result = result.concat(childResult);\n      }\n    }\n    return result;\n  }\n  getWorldPosition(target) {\n    this.updateWorldMatrix(true, false);\n    return target.setFromMatrixPosition(this.matrixWorld);\n  }\n  getWorldQuaternion(target) {\n    this.updateWorldMatrix(true, false);\n    this.matrixWorld.decompose(_position, target, _scale);\n    return target;\n  }\n  getWorldScale(target) {\n    this.updateWorldMatrix(true, false);\n    this.matrixWorld.decompose(_position, _quaternion, target);\n    return target;\n  }\n  getWorldDirection(target) {\n    this.updateWorldMatrix(true, false);\n    const e = this.matrixWorld.elements;\n    return target.set(e[8], e[9], e[10]).normalize();\n  }\n  raycast( /* raycaster, intersects */) {}\n  traverse(callback) {\n    callback(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  }\n  traverseVisible(callback) {\n    if (this.visible === false) return;\n    callback(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  }\n  traverseAncestors(callback) {\n    const parent = this.parent;\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  }\n  updateMatrix() {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  }\n  updateMatrixWorld(force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    }\n\n    // update children\n\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      const child = children[i];\n      if (child.matrixWorldAutoUpdate === true || force === true) {\n        child.updateMatrixWorld(force);\n      }\n    }\n  }\n  updateWorldMatrix(updateParents, updateChildren) {\n    const parent = this.parent;\n    if (updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true) {\n      parent.updateWorldMatrix(true, false);\n    }\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    if (this.parent === null) {\n      this.matrixWorld.copy(this.matrix);\n    } else {\n      this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n    }\n\n    // update children\n\n    if (updateChildren === true) {\n      const children = this.children;\n      for (let i = 0, l = children.length; i < l; i++) {\n        const child = children[i];\n        if (child.matrixWorldAutoUpdate === true) {\n          child.updateWorldMatrix(false, true);\n        }\n      }\n    }\n  }\n  toJSON(meta) {\n    // meta is a string when called from JSON.stringify\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    const output = {};\n\n    // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {},\n        shapes: {},\n        skeletons: {},\n        animations: {},\n        nodes: {}\n      };\n      output.metadata = {\n        version: 4.6,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    }\n\n    // standard Object3D serialization\n\n    const object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (this.frustumCulled === false) object.frustumCulled = false;\n    if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n    if (Object.keys(this.userData).length > 0) object.userData = this.userData;\n    object.layers = this.layers.mask;\n    object.matrix = this.matrix.toArray();\n    object.up = this.up.toArray();\n    if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false;\n\n    // object specific properties\n\n    if (this.isInstancedMesh) {\n      object.type = 'InstancedMesh';\n      object.count = this.count;\n      object.instanceMatrix = this.instanceMatrix.toJSON();\n      if (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n    }\n\n    //\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n      return element.uuid;\n    }\n    if (this.isScene) {\n      if (this.background) {\n        if (this.background.isColor) {\n          object.background = this.background.toJSON();\n        } else if (this.background.isTexture) {\n          object.background = this.background.toJSON(meta).uuid;\n        }\n      }\n      if (this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true) {\n        object.environment = this.environment.toJSON(meta).uuid;\n      }\n    } else if (this.isMesh || this.isLine || this.isPoints) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n      const parameters = this.geometry.parameters;\n      if (parameters !== undefined && parameters.shapes !== undefined) {\n        const shapes = parameters.shapes;\n        if (Array.isArray(shapes)) {\n          for (let i = 0, l = shapes.length; i < l; i++) {\n            const shape = shapes[i];\n            serialize(meta.shapes, shape);\n          }\n        } else {\n          serialize(meta.shapes, shapes);\n        }\n      }\n    }\n    if (this.isSkinnedMesh) {\n      object.bindMode = this.bindMode;\n      object.bindMatrix = this.bindMatrix.toArray();\n      if (this.skeleton !== undefined) {\n        serialize(meta.skeletons, this.skeleton);\n        object.skeleton = this.skeleton.uuid;\n      }\n    }\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        const uuids = [];\n        for (let i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    }\n\n    //\n\n    if (this.children.length > 0) {\n      object.children = [];\n      for (let i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    //\n\n    if (this.animations.length > 0) {\n      object.animations = [];\n      for (let i = 0; i < this.animations.length; i++) {\n        const animation = this.animations[i];\n        object.animations.push(serialize(meta.animations, animation));\n      }\n    }\n    if (isRootObject) {\n      const geometries = extractFromCache(meta.geometries);\n      const materials = extractFromCache(meta.materials);\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      const shapes = extractFromCache(meta.shapes);\n      const skeletons = extractFromCache(meta.skeletons);\n      const animations = extractFromCache(meta.animations);\n      const nodes = extractFromCache(meta.nodes);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n      if (shapes.length > 0) output.shapes = shapes;\n      if (skeletons.length > 0) output.skeletons = skeletons;\n      if (animations.length > 0) output.animations = animations;\n      if (nodes.length > 0) output.nodes = nodes;\n    }\n    output.object = object;\n    return output;\n\n    // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n    function extractFromCache(cache) {\n      const values = [];\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n  }\n  clone(recursive) {\n    return new this.constructor().copy(this, recursive);\n  }\n  copy(source, recursive = true) {\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.rotation.order = source.rotation.order;\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.animations = source.animations.slice();\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    if (recursive === true) {\n      for (let i = 0; i < source.children.length; i++) {\n        const child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n    return this;\n  }\n}\nObject3D.DEFAULT_UP = /*@__PURE__*/new Vector3(0, 1, 0);\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\nexport { Object3D };","map":{"version":3,"names":["Quaternion","Vector3","Matrix4","EventDispatcher","Euler","Layers","Matrix3","MathUtils","_object3DId","_v1","_q1","_m1","_target","_position","_scale","_quaternion","_xAxis","_yAxis","_zAxis","_addedEvent","type","_removedEvent","Object3D","constructor","isObject3D","Object","defineProperty","value","uuid","generateUUID","name","parent","children","up","DEFAULT_UP","clone","position","rotation","quaternion","scale","onRotationChange","setFromEuler","onQuaternionChange","setFromQuaternion","undefined","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","matrix","matrixWorld","matrixAutoUpdate","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","layers","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","onBeforeRender","onAfterRender","applyMatrix4","updateMatrix","premultiply","decompose","applyQuaternion","q","setRotationFromAxisAngle","axis","angle","setFromAxisAngle","setRotationFromEuler","euler","setRotationFromMatrix","m","setFromRotationMatrix","setRotationFromQuaternion","copy","rotateOnAxis","multiply","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","add","multiplyScalar","translateX","translateY","translateZ","localToWorld","vector","updateWorldMatrix","worldToLocal","invert","lookAt","x","y","z","isVector3","set","setFromMatrixPosition","isCamera","isLight","extractRotation","object","arguments","length","i","console","error","remove","push","dispatchEvent","index","indexOf","splice","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","l","child","getObjectsByProperty","result","childResult","concat","getWorldPosition","target","getWorldQuaternion","getWorldScale","getWorldDirection","e","elements","normalize","raycast","traverse","callback","traverseVisible","traverseAncestors","compose","updateMatrixWorld","force","multiplyMatrices","updateParents","updateChildren","toJSON","meta","isRootObject","output","geometries","materials","textures","images","shapes","skeletons","nodes","metadata","version","generator","keys","mask","toArray","isInstancedMesh","count","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","isTexture","environment","isRenderTargetTexture","isMesh","isLine","isPoints","geometry","parameters","Array","isArray","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","data","recursive","source","order","slice","JSON","parse","stringify"],"sources":["/Users/bastien/Desktop/MoussMouss/node_modules/three/src/core/Object3D.js"],"sourcesContent":["import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet _object3DId = 0;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nexport { Object3D };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAO,KAAKC,SAAS,MAAM,sBAAsB;AAEjD,IAAIC,WAAW,GAAG,CAAC;AAEnB,MAAMC,GAAG,GAAG,aAAc,IAAIR,OAAO,CAAC,CAAC;AACvC,MAAMS,GAAG,GAAG,aAAc,IAAIV,UAAU,CAAC,CAAC;AAC1C,MAAMW,GAAG,GAAG,aAAc,IAAIT,OAAO,CAAC,CAAC;AACvC,MAAMU,OAAO,GAAG,aAAc,IAAIX,OAAO,CAAC,CAAC;AAE3C,MAAMY,SAAS,GAAG,aAAc,IAAIZ,OAAO,CAAC,CAAC;AAC7C,MAAMa,MAAM,GAAG,aAAc,IAAIb,OAAO,CAAC,CAAC;AAC1C,MAAMc,WAAW,GAAG,aAAc,IAAIf,UAAU,CAAC,CAAC;AAElD,MAAMgB,MAAM,GAAG,aAAc,IAAIf,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACnD,MAAMgB,MAAM,GAAG,aAAc,IAAIhB,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACnD,MAAMiB,MAAM,GAAG,aAAc,IAAIjB,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAEnD,MAAMkB,WAAW,GAAG;EAAEC,IAAI,EAAE;AAAQ,CAAC;AACrC,MAAMC,aAAa,GAAG;EAAED,IAAI,EAAE;AAAU,CAAC;AAEzC,MAAME,QAAQ,SAASnB,eAAe,CAAC;EAEtCoB,WAAWA,CAAA,EAAG;IAEb,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,UAAU,GAAG,IAAI;IAEtBC,MAAM,CAACC,cAAc,CAAE,IAAI,EAAE,IAAI,EAAE;MAAEC,KAAK,EAAEnB,WAAW;IAAI,CAAE,CAAC;IAE9D,IAAI,CAACoB,IAAI,GAAGrB,SAAS,CAACsB,YAAY,CAAC,CAAC;IAEpC,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACV,IAAI,GAAG,UAAU;IAEtB,IAAI,CAACW,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAElB,IAAI,CAACC,EAAE,GAAGX,QAAQ,CAACY,UAAU,CAACC,KAAK,CAAC,CAAC;IAErC,MAAMC,QAAQ,GAAG,IAAInC,OAAO,CAAC,CAAC;IAC9B,MAAMoC,QAAQ,GAAG,IAAIjC,KAAK,CAAC,CAAC;IAC5B,MAAMkC,UAAU,GAAG,IAAItC,UAAU,CAAC,CAAC;IACnC,MAAMuC,KAAK,GAAG,IAAItC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEpC,SAASuC,gBAAgBA,CAAA,EAAG;MAE3BF,UAAU,CAACG,YAAY,CAAEJ,QAAQ,EAAE,KAAM,CAAC;IAE3C;IAEA,SAASK,kBAAkBA,CAAA,EAAG;MAE7BL,QAAQ,CAACM,iBAAiB,CAAEL,UAAU,EAAEM,SAAS,EAAE,KAAM,CAAC;IAE3D;IAEAP,QAAQ,CAACQ,SAAS,CAAEL,gBAAiB,CAAC;IACtCF,UAAU,CAACO,SAAS,CAAEH,kBAAmB,CAAC;IAE1CjB,MAAM,CAACqB,gBAAgB,CAAE,IAAI,EAAE;MAC9BV,QAAQ,EAAE;QACTW,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,IAAI;QAChBrB,KAAK,EAAES;MACR,CAAC;MACDC,QAAQ,EAAE;QACTU,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,IAAI;QAChBrB,KAAK,EAAEU;MACR,CAAC;MACDC,UAAU,EAAE;QACXS,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,IAAI;QAChBrB,KAAK,EAAEW;MACR,CAAC;MACDC,KAAK,EAAE;QACNQ,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,IAAI;QAChBrB,KAAK,EAAEY;MACR,CAAC;MACDU,eAAe,EAAE;QAChBtB,KAAK,EAAE,IAAIzB,OAAO,CAAC;MACpB,CAAC;MACDgD,YAAY,EAAE;QACbvB,KAAK,EAAE,IAAIrB,OAAO,CAAC;MACpB;IACD,CAAE,CAAC;IAEH,IAAI,CAAC6C,MAAM,GAAG,IAAIjD,OAAO,CAAC,CAAC;IAC3B,IAAI,CAACkD,WAAW,GAAG,IAAIlD,OAAO,CAAC,CAAC;IAEhC,IAAI,CAACmD,gBAAgB,GAAG/B,QAAQ,CAACgC,0BAA0B;IAC3D,IAAI,CAACC,sBAAsB,GAAG,KAAK;IAEnC,IAAI,CAACC,qBAAqB,GAAGlC,QAAQ,CAACmC,gCAAgC,CAAC,CAAC;;IAExE,IAAI,CAACC,MAAM,GAAG,IAAIrD,MAAM,CAAC,CAAC;IAC1B,IAAI,CAACsD,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,aAAa,GAAG,KAAK;IAE1B,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,WAAW,GAAG,CAAC;IAEpB,IAAI,CAACC,UAAU,GAAG,EAAE;IAEpB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;EAEnB;EAEAC,cAAcA,CAAA,CAAE,0DAA2D,CAAC;EAE5EC,aAAaA,CAAA,CAAE,0DAA2D,CAAC;EAE3EC,YAAYA,CAAEjB,MAAM,EAAG;IAEtB,IAAK,IAAI,CAACE,gBAAgB,EAAG,IAAI,CAACgB,YAAY,CAAC,CAAC;IAEhD,IAAI,CAAClB,MAAM,CAACmB,WAAW,CAAEnB,MAAO,CAAC;IAEjC,IAAI,CAACA,MAAM,CAACoB,SAAS,CAAE,IAAI,CAACnC,QAAQ,EAAE,IAAI,CAACE,UAAU,EAAE,IAAI,CAACC,KAAM,CAAC;EAEpE;EAEAiC,eAAeA,CAAEC,CAAC,EAAG;IAEpB,IAAI,CAACnC,UAAU,CAACgC,WAAW,CAAEG,CAAE,CAAC;IAEhC,OAAO,IAAI;EAEZ;EAEAC,wBAAwBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;IAEvC;;IAEA,IAAI,CAACtC,UAAU,CAACuC,gBAAgB,CAAEF,IAAI,EAAEC,KAAM,CAAC;EAEhD;EAEAE,oBAAoBA,CAAEC,KAAK,EAAG;IAE7B,IAAI,CAACzC,UAAU,CAACG,YAAY,CAAEsC,KAAK,EAAE,IAAK,CAAC;EAE5C;EAEAC,qBAAqBA,CAAEC,CAAC,EAAG;IAE1B;;IAEA,IAAI,CAAC3C,UAAU,CAAC4C,qBAAqB,CAAED,CAAE,CAAC;EAE3C;EAEAE,yBAAyBA,CAAEV,CAAC,EAAG;IAE9B;;IAEA,IAAI,CAACnC,UAAU,CAAC8C,IAAI,CAAEX,CAAE,CAAC;EAE1B;EAEAY,YAAYA,CAAEV,IAAI,EAAEC,KAAK,EAAG;IAE3B;IACA;;IAEAlE,GAAG,CAACmE,gBAAgB,CAAEF,IAAI,EAAEC,KAAM,CAAC;IAEnC,IAAI,CAACtC,UAAU,CAACgD,QAAQ,CAAE5E,GAAI,CAAC;IAE/B,OAAO,IAAI;EAEZ;EAEA6E,iBAAiBA,CAAEZ,IAAI,EAAEC,KAAK,EAAG;IAEhC;IACA;IACA;;IAEAlE,GAAG,CAACmE,gBAAgB,CAAEF,IAAI,EAAEC,KAAM,CAAC;IAEnC,IAAI,CAACtC,UAAU,CAACgC,WAAW,CAAE5D,GAAI,CAAC;IAElC,OAAO,IAAI;EAEZ;EAEA8E,OAAOA,CAAEZ,KAAK,EAAG;IAEhB,OAAO,IAAI,CAACS,YAAY,CAAErE,MAAM,EAAE4D,KAAM,CAAC;EAE1C;EAEAa,OAAOA,CAAEb,KAAK,EAAG;IAEhB,OAAO,IAAI,CAACS,YAAY,CAAEpE,MAAM,EAAE2D,KAAM,CAAC;EAE1C;EAEAc,OAAOA,CAAEd,KAAK,EAAG;IAEhB,OAAO,IAAI,CAACS,YAAY,CAAEnE,MAAM,EAAE0D,KAAM,CAAC;EAE1C;EAEAe,eAAeA,CAAEhB,IAAI,EAAEiB,QAAQ,EAAG;IAEjC;IACA;;IAEAnF,GAAG,CAAC2E,IAAI,CAAET,IAAK,CAAC,CAACH,eAAe,CAAE,IAAI,CAAClC,UAAW,CAAC;IAEnD,IAAI,CAACF,QAAQ,CAACyD,GAAG,CAAEpF,GAAG,CAACqF,cAAc,CAAEF,QAAS,CAAE,CAAC;IAEnD,OAAO,IAAI;EAEZ;EAEAG,UAAUA,CAAEH,QAAQ,EAAG;IAEtB,OAAO,IAAI,CAACD,eAAe,CAAE3E,MAAM,EAAE4E,QAAS,CAAC;EAEhD;EAEAI,UAAUA,CAAEJ,QAAQ,EAAG;IAEtB,OAAO,IAAI,CAACD,eAAe,CAAE1E,MAAM,EAAE2E,QAAS,CAAC;EAEhD;EAEAK,UAAUA,CAAEL,QAAQ,EAAG;IAEtB,OAAO,IAAI,CAACD,eAAe,CAAEzE,MAAM,EAAE0E,QAAS,CAAC;EAEhD;EAEAM,YAAYA,CAAEC,MAAM,EAAG;IAEtB,IAAI,CAACC,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErC,OAAOD,MAAM,CAAC/B,YAAY,CAAE,IAAI,CAAChB,WAAY,CAAC;EAE/C;EAEAiD,YAAYA,CAAEF,MAAM,EAAG;IAEtB,IAAI,CAACC,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErC,OAAOD,MAAM,CAAC/B,YAAY,CAAEzD,GAAG,CAACyE,IAAI,CAAE,IAAI,CAAChC,WAAY,CAAC,CAACkD,MAAM,CAAC,CAAE,CAAC;EAEpE;EAEAC,MAAMA,CAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;IAEjB;;IAEA,IAAKF,CAAC,CAACG,SAAS,EAAG;MAElB/F,OAAO,CAACwE,IAAI,CAAEoB,CAAE,CAAC;IAElB,CAAC,MAAM;MAEN5F,OAAO,CAACgG,GAAG,CAAEJ,CAAC,EAAEC,CAAC,EAAEC,CAAE,CAAC;IAEvB;IAEA,MAAM3E,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAI,CAACqE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErCvF,SAAS,CAACgG,qBAAqB,CAAE,IAAI,CAACzD,WAAY,CAAC;IAEnD,IAAK,IAAI,CAAC0D,QAAQ,IAAI,IAAI,CAACC,OAAO,EAAG;MAEpCpG,GAAG,CAAC4F,MAAM,CAAE1F,SAAS,EAAED,OAAO,EAAE,IAAI,CAACqB,EAAG,CAAC;IAE1C,CAAC,MAAM;MAENtB,GAAG,CAAC4F,MAAM,CAAE3F,OAAO,EAAEC,SAAS,EAAE,IAAI,CAACoB,EAAG,CAAC;IAE1C;IAEA,IAAI,CAACK,UAAU,CAAC4C,qBAAqB,CAAEvE,GAAI,CAAC;IAE5C,IAAKoB,MAAM,EAAG;MAEbpB,GAAG,CAACqG,eAAe,CAAEjF,MAAM,CAACqB,WAAY,CAAC;MACzC1C,GAAG,CAACwE,qBAAqB,CAAEvE,GAAI,CAAC;MAChC,IAAI,CAAC2B,UAAU,CAACgC,WAAW,CAAE5D,GAAG,CAAC4F,MAAM,CAAC,CAAE,CAAC;IAE5C;EAED;EAEAT,GAAGA,CAAEoB,MAAM,EAAG;IAEb,IAAKC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAG;MAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACC,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE7C,IAAI,CAACvB,GAAG,CAAEqB,SAAS,CAAEE,CAAC,CAAG,CAAC;MAE3B;MAEA,OAAO,IAAI;IAEZ;IAEA,IAAKH,MAAM,KAAK,IAAI,EAAG;MAEtBI,OAAO,CAACC,KAAK,CAAE,kEAAkE,EAAEL,MAAO,CAAC;MAC3F,OAAO,IAAI;IAEZ;IAEA,IAAKA,MAAM,IAAIA,MAAM,CAACzF,UAAU,EAAG;MAElC,IAAKyF,MAAM,CAAClF,MAAM,KAAK,IAAI,EAAG;QAE7BkF,MAAM,CAAClF,MAAM,CAACwF,MAAM,CAAEN,MAAO,CAAC;MAE/B;MAEAA,MAAM,CAAClF,MAAM,GAAG,IAAI;MACpB,IAAI,CAACC,QAAQ,CAACwF,IAAI,CAAEP,MAAO,CAAC;MAE5BA,MAAM,CAACQ,aAAa,CAAEtG,WAAY,CAAC;IAEpC,CAAC,MAAM;MAENkG,OAAO,CAACC,KAAK,CAAE,+DAA+D,EAAEL,MAAO,CAAC;IAEzF;IAEA,OAAO,IAAI;EAEZ;EAEAM,MAAMA,CAAEN,MAAM,EAAG;IAEhB,IAAKC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAG;MAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACC,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE7C,IAAI,CAACG,MAAM,CAAEL,SAAS,CAAEE,CAAC,CAAG,CAAC;MAE9B;MAEA,OAAO,IAAI;IAEZ;IAEA,MAAMM,KAAK,GAAG,IAAI,CAAC1F,QAAQ,CAAC2F,OAAO,CAAEV,MAAO,CAAC;IAE7C,IAAKS,KAAK,KAAK,CAAE,CAAC,EAAG;MAEpBT,MAAM,CAAClF,MAAM,GAAG,IAAI;MACpB,IAAI,CAACC,QAAQ,CAAC4F,MAAM,CAAEF,KAAK,EAAE,CAAE,CAAC;MAEhCT,MAAM,CAACQ,aAAa,CAAEpG,aAAc,CAAC;IAEtC;IAEA,OAAO,IAAI;EAEZ;EAEAwG,gBAAgBA,CAAA,EAAG;IAElB,MAAM9F,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;MAEtBA,MAAM,CAACwF,MAAM,CAAE,IAAK,CAAC;IAEtB;IAEA,OAAO,IAAI;EAEZ;EAEAO,KAAKA,CAAA,EAAG;IAEP,OAAO,IAAI,CAACP,MAAM,CAAE,GAAI,IAAI,CAACvF,QAAS,CAAC;EAExC;EAEA+F,MAAMA,CAAEd,MAAM,EAAG;IAEhB;;IAEA;;IAEA,IAAI,CAACb,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErCzF,GAAG,CAACyE,IAAI,CAAE,IAAI,CAAChC,WAAY,CAAC,CAACkD,MAAM,CAAC,CAAC;IAErC,IAAKW,MAAM,CAAClF,MAAM,KAAK,IAAI,EAAG;MAE7BkF,MAAM,CAAClF,MAAM,CAACqE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAE9CzF,GAAG,CAAC2E,QAAQ,CAAE2B,MAAM,CAAClF,MAAM,CAACqB,WAAY,CAAC;IAE1C;IAEA6D,MAAM,CAAC7C,YAAY,CAAEzD,GAAI,CAAC;IAE1B,IAAI,CAACkF,GAAG,CAAEoB,MAAO,CAAC;IAElBA,MAAM,CAACb,iBAAiB,CAAE,KAAK,EAAE,IAAK,CAAC;IAEvC,OAAO,IAAI;EAEZ;EAEA4B,aAAaA,CAAEC,EAAE,EAAG;IAEnB,OAAO,IAAI,CAACC,mBAAmB,CAAE,IAAI,EAAED,EAAG,CAAC;EAE5C;EAEAE,eAAeA,CAAErG,IAAI,EAAG;IAEvB,OAAO,IAAI,CAACoG,mBAAmB,CAAE,MAAM,EAAEpG,IAAK,CAAC;EAEhD;EAEAoG,mBAAmBA,CAAEpG,IAAI,EAAEH,KAAK,EAAG;IAElC,IAAK,IAAI,CAAEG,IAAI,CAAE,KAAKH,KAAK,EAAG,OAAO,IAAI;IAEzC,KAAM,IAAIyF,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAG,IAAI,CAACpG,QAAQ,CAACmF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;MAExD,MAAMiB,KAAK,GAAG,IAAI,CAACrG,QAAQ,CAAEoF,CAAC,CAAE;MAChC,MAAMH,MAAM,GAAGoB,KAAK,CAACH,mBAAmB,CAAEpG,IAAI,EAAEH,KAAM,CAAC;MAEvD,IAAKsF,MAAM,KAAKrE,SAAS,EAAG;QAE3B,OAAOqE,MAAM;MAEd;IAED;IAEA,OAAOrE,SAAS;EAEjB;EAEA0F,oBAAoBA,CAAExG,IAAI,EAAEH,KAAK,EAAG;IAEnC,IAAI4G,MAAM,GAAG,EAAE;IAEf,IAAK,IAAI,CAAEzG,IAAI,CAAE,KAAKH,KAAK,EAAG4G,MAAM,CAACf,IAAI,CAAE,IAAK,CAAC;IAEjD,KAAM,IAAIJ,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAG,IAAI,CAACpG,QAAQ,CAACmF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;MAExD,MAAMoB,WAAW,GAAG,IAAI,CAACxG,QAAQ,CAAEoF,CAAC,CAAE,CAACkB,oBAAoB,CAAExG,IAAI,EAAEH,KAAM,CAAC;MAE1E,IAAK6G,WAAW,CAACrB,MAAM,GAAG,CAAC,EAAG;QAE7BoB,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAED,WAAY,CAAC;MAEtC;IAED;IAEA,OAAOD,MAAM;EAEd;EAEAG,gBAAgBA,CAAEC,MAAM,EAAG;IAE1B,IAAI,CAACvC,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErC,OAAOuC,MAAM,CAAC9B,qBAAqB,CAAE,IAAI,CAACzD,WAAY,CAAC;EAExD;EAEAwF,kBAAkBA,CAAED,MAAM,EAAG;IAE5B,IAAI,CAACvC,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErC,IAAI,CAAChD,WAAW,CAACmB,SAAS,CAAE1D,SAAS,EAAE8H,MAAM,EAAE7H,MAAO,CAAC;IAEvD,OAAO6H,MAAM;EAEd;EAEAE,aAAaA,CAAEF,MAAM,EAAG;IAEvB,IAAI,CAACvC,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErC,IAAI,CAAChD,WAAW,CAACmB,SAAS,CAAE1D,SAAS,EAAEE,WAAW,EAAE4H,MAAO,CAAC;IAE5D,OAAOA,MAAM;EAEd;EAEAG,iBAAiBA,CAAEH,MAAM,EAAG;IAE3B,IAAI,CAACvC,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAErC,MAAM2C,CAAC,GAAG,IAAI,CAAC3F,WAAW,CAAC4F,QAAQ;IAEnC,OAAOL,MAAM,CAAC/B,GAAG,CAAEmC,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,EAAE,CAAG,CAAC,CAACE,SAAS,CAAC,CAAC;EAEzD;EAEAC,OAAOA,CAAA,CAAE,6BAA8B,CAAC;EAExCC,QAAQA,CAAEC,QAAQ,EAAG;IAEpBA,QAAQ,CAAE,IAAK,CAAC;IAEhB,MAAMpH,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAE9B,KAAM,IAAIoF,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGpG,QAAQ,CAACmF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;MAEnDpF,QAAQ,CAAEoF,CAAC,CAAE,CAAC+B,QAAQ,CAAEC,QAAS,CAAC;IAEnC;EAED;EAEAC,eAAeA,CAAED,QAAQ,EAAG;IAE3B,IAAK,IAAI,CAACzF,OAAO,KAAK,KAAK,EAAG;IAE9ByF,QAAQ,CAAE,IAAK,CAAC;IAEhB,MAAMpH,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAE9B,KAAM,IAAIoF,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGpG,QAAQ,CAACmF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;MAEnDpF,QAAQ,CAAEoF,CAAC,CAAE,CAACiC,eAAe,CAAED,QAAS,CAAC;IAE1C;EAED;EAEAE,iBAAiBA,CAAEF,QAAQ,EAAG;IAE7B,MAAMrH,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;MAEtBqH,QAAQ,CAAErH,MAAO,CAAC;MAElBA,MAAM,CAACuH,iBAAiB,CAAEF,QAAS,CAAC;IAErC;EAED;EAEA/E,YAAYA,CAAA,EAAG;IAEd,IAAI,CAAClB,MAAM,CAACoG,OAAO,CAAE,IAAI,CAACnH,QAAQ,EAAE,IAAI,CAACE,UAAU,EAAE,IAAI,CAACC,KAAM,CAAC;IAEjE,IAAI,CAACgB,sBAAsB,GAAG,IAAI;EAEnC;EAEAiG,iBAAiBA,CAAEC,KAAK,EAAG;IAE1B,IAAK,IAAI,CAACpG,gBAAgB,EAAG,IAAI,CAACgB,YAAY,CAAC,CAAC;IAEhD,IAAK,IAAI,CAACd,sBAAsB,IAAIkG,KAAK,EAAG;MAE3C,IAAK,IAAI,CAAC1H,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACqB,WAAW,CAACgC,IAAI,CAAE,IAAI,CAACjC,MAAO,CAAC;MAErC,CAAC,MAAM;QAEN,IAAI,CAACC,WAAW,CAACsG,gBAAgB,CAAE,IAAI,CAAC3H,MAAM,CAACqB,WAAW,EAAE,IAAI,CAACD,MAAO,CAAC;MAE1E;MAEA,IAAI,CAACI,sBAAsB,GAAG,KAAK;MAEnCkG,KAAK,GAAG,IAAI;IAEb;;IAEA;;IAEA,MAAMzH,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAE9B,KAAM,IAAIoF,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGpG,QAAQ,CAACmF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;MAEnD,MAAMiB,KAAK,GAAGrG,QAAQ,CAAEoF,CAAC,CAAE;MAE3B,IAAKiB,KAAK,CAAC7E,qBAAqB,KAAK,IAAI,IAAIiG,KAAK,KAAK,IAAI,EAAG;QAE7DpB,KAAK,CAACmB,iBAAiB,CAAEC,KAAM,CAAC;MAEjC;IAED;EAED;EAEArD,iBAAiBA,CAAEuD,aAAa,EAAEC,cAAc,EAAG;IAElD,MAAM7H,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAK4H,aAAa,KAAK,IAAI,IAAI5H,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACyB,qBAAqB,KAAK,IAAI,EAAG;MAEzFzB,MAAM,CAACqE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;IAExC;IAEA,IAAK,IAAI,CAAC/C,gBAAgB,EAAG,IAAI,CAACgB,YAAY,CAAC,CAAC;IAEhD,IAAK,IAAI,CAACtC,MAAM,KAAK,IAAI,EAAG;MAE3B,IAAI,CAACqB,WAAW,CAACgC,IAAI,CAAE,IAAI,CAACjC,MAAO,CAAC;IAErC,CAAC,MAAM;MAEN,IAAI,CAACC,WAAW,CAACsG,gBAAgB,CAAE,IAAI,CAAC3H,MAAM,CAACqB,WAAW,EAAE,IAAI,CAACD,MAAO,CAAC;IAE1E;;IAEA;;IAEA,IAAKyG,cAAc,KAAK,IAAI,EAAG;MAE9B,MAAM5H,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIoF,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGpG,QAAQ,CAACmF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;QAEnD,MAAMiB,KAAK,GAAGrG,QAAQ,CAAEoF,CAAC,CAAE;QAE3B,IAAKiB,KAAK,CAAC7E,qBAAqB,KAAK,IAAI,EAAG;UAE3C6E,KAAK,CAACjC,iBAAiB,CAAE,KAAK,EAAE,IAAK,CAAC;QAEvC;MAED;IAED;EAED;EAEAyD,MAAMA,CAAEC,IAAI,EAAG;IAEd;IACA,MAAMC,YAAY,GAAKD,IAAI,KAAKlH,SAAS,IAAI,OAAOkH,IAAI,KAAK,QAAU;IAEvE,MAAME,MAAM,GAAG,CAAC,CAAC;;IAEjB;IACA;IACA;IACA,IAAKD,YAAY,EAAG;MAEnB;MACAD,IAAI,GAAG;QACNG,UAAU,EAAE,CAAC,CAAC;QACdC,SAAS,EAAE,CAAC,CAAC;QACbC,QAAQ,EAAE,CAAC,CAAC;QACZC,MAAM,EAAE,CAAC,CAAC;QACVC,MAAM,EAAE,CAAC,CAAC;QACVC,SAAS,EAAE,CAAC,CAAC;QACbtG,UAAU,EAAE,CAAC,CAAC;QACduG,KAAK,EAAE,CAAC;MACT,CAAC;MAEDP,MAAM,CAACQ,QAAQ,GAAG;QACjBC,OAAO,EAAE,GAAG;QACZrJ,IAAI,EAAE,QAAQ;QACdsJ,SAAS,EAAE;MACZ,CAAC;IAEF;;IAEA;;IAEA,MAAMzD,MAAM,GAAG,CAAC,CAAC;IAEjBA,MAAM,CAACrF,IAAI,GAAG,IAAI,CAACA,IAAI;IACvBqF,MAAM,CAAC7F,IAAI,GAAG,IAAI,CAACA,IAAI;IAEvB,IAAK,IAAI,CAACU,IAAI,KAAK,EAAE,EAAGmF,MAAM,CAACnF,IAAI,GAAG,IAAI,CAACA,IAAI;IAC/C,IAAK,IAAI,CAAC8B,UAAU,KAAK,IAAI,EAAGqD,MAAM,CAACrD,UAAU,GAAG,IAAI;IACxD,IAAK,IAAI,CAACC,aAAa,KAAK,IAAI,EAAGoD,MAAM,CAACpD,aAAa,GAAG,IAAI;IAC9D,IAAK,IAAI,CAACF,OAAO,KAAK,KAAK,EAAGsD,MAAM,CAACtD,OAAO,GAAG,KAAK;IACpD,IAAK,IAAI,CAACG,aAAa,KAAK,KAAK,EAAGmD,MAAM,CAACnD,aAAa,GAAG,KAAK;IAChE,IAAK,IAAI,CAACC,WAAW,KAAK,CAAC,EAAGkD,MAAM,CAAClD,WAAW,GAAG,IAAI,CAACA,WAAW;IACnE,IAAKtC,MAAM,CAACkJ,IAAI,CAAE,IAAI,CAAC1G,QAAS,CAAC,CAACkD,MAAM,GAAG,CAAC,EAAGF,MAAM,CAAChD,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAE9EgD,MAAM,CAACvD,MAAM,GAAG,IAAI,CAACA,MAAM,CAACkH,IAAI;IAChC3D,MAAM,CAAC9D,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC0H,OAAO,CAAC,CAAC;IACrC5D,MAAM,CAAChF,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC4I,OAAO,CAAC,CAAC;IAE7B,IAAK,IAAI,CAACxH,gBAAgB,KAAK,KAAK,EAAG4D,MAAM,CAAC5D,gBAAgB,GAAG,KAAK;;IAEtE;;IAEA,IAAK,IAAI,CAACyH,eAAe,EAAG;MAE3B7D,MAAM,CAAC7F,IAAI,GAAG,eAAe;MAC7B6F,MAAM,CAAC8D,KAAK,GAAG,IAAI,CAACA,KAAK;MACzB9D,MAAM,CAAC+D,cAAc,GAAG,IAAI,CAACA,cAAc,CAACnB,MAAM,CAAC,CAAC;MACpD,IAAK,IAAI,CAACoB,aAAa,KAAK,IAAI,EAAGhE,MAAM,CAACgE,aAAa,GAAG,IAAI,CAACA,aAAa,CAACpB,MAAM,CAAC,CAAC;IAEtF;;IAEA;;IAEA,SAASqB,SAASA,CAAEC,OAAO,EAAEC,OAAO,EAAG;MAEtC,IAAKD,OAAO,CAAEC,OAAO,CAACxJ,IAAI,CAAE,KAAKgB,SAAS,EAAG;QAE5CuI,OAAO,CAAEC,OAAO,CAACxJ,IAAI,CAAE,GAAGwJ,OAAO,CAACvB,MAAM,CAAEC,IAAK,CAAC;MAEjD;MAEA,OAAOsB,OAAO,CAACxJ,IAAI;IAEpB;IAEA,IAAK,IAAI,CAACyJ,OAAO,EAAG;MAEnB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB,IAAK,IAAI,CAACA,UAAU,CAACC,OAAO,EAAG;UAE9BtE,MAAM,CAACqE,UAAU,GAAG,IAAI,CAACA,UAAU,CAACzB,MAAM,CAAC,CAAC;QAE7C,CAAC,MAAM,IAAK,IAAI,CAACyB,UAAU,CAACE,SAAS,EAAG;UAEvCvE,MAAM,CAACqE,UAAU,GAAG,IAAI,CAACA,UAAU,CAACzB,MAAM,CAAEC,IAAK,CAAC,CAAClI,IAAI;QAExD;MAED;MAEA,IAAK,IAAI,CAAC6J,WAAW,IAAI,IAAI,CAACA,WAAW,CAACD,SAAS,IAAI,IAAI,CAACC,WAAW,CAACC,qBAAqB,KAAK,IAAI,EAAG;QAExGzE,MAAM,CAACwE,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC5B,MAAM,CAAEC,IAAK,CAAC,CAAClI,IAAI;MAE1D;IAED,CAAC,MAAM,IAAK,IAAI,CAAC+J,MAAM,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAG;MAEzD5E,MAAM,CAAC6E,QAAQ,GAAGZ,SAAS,CAAEpB,IAAI,CAACG,UAAU,EAAE,IAAI,CAAC6B,QAAS,CAAC;MAE7D,MAAMC,UAAU,GAAG,IAAI,CAACD,QAAQ,CAACC,UAAU;MAE3C,IAAKA,UAAU,KAAKnJ,SAAS,IAAImJ,UAAU,CAAC1B,MAAM,KAAKzH,SAAS,EAAG;QAElE,MAAMyH,MAAM,GAAG0B,UAAU,CAAC1B,MAAM;QAEhC,IAAK2B,KAAK,CAACC,OAAO,CAAE5B,MAAO,CAAC,EAAG;UAE9B,KAAM,IAAIjD,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGiC,MAAM,CAAClD,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;YAEjD,MAAM8E,KAAK,GAAG7B,MAAM,CAAEjD,CAAC,CAAE;YAEzB8D,SAAS,CAAEpB,IAAI,CAACO,MAAM,EAAE6B,KAAM,CAAC;UAEhC;QAED,CAAC,MAAM;UAENhB,SAAS,CAAEpB,IAAI,CAACO,MAAM,EAAEA,MAAO,CAAC;QAEjC;MAED;IAED;IAEA,IAAK,IAAI,CAAC8B,aAAa,EAAG;MAEzBlF,MAAM,CAACmF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC/BnF,MAAM,CAACoF,UAAU,GAAG,IAAI,CAACA,UAAU,CAACxB,OAAO,CAAC,CAAC;MAE7C,IAAK,IAAI,CAACyB,QAAQ,KAAK1J,SAAS,EAAG;QAElCsI,SAAS,CAAEpB,IAAI,CAACQ,SAAS,EAAE,IAAI,CAACgC,QAAS,CAAC;QAE1CrF,MAAM,CAACqF,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC1K,IAAI;MAErC;IAED;IAEA,IAAK,IAAI,CAAC2K,QAAQ,KAAK3J,SAAS,EAAG;MAElC,IAAKoJ,KAAK,CAACC,OAAO,CAAE,IAAI,CAACM,QAAS,CAAC,EAAG;QAErC,MAAMC,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAIpF,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAG,IAAI,CAACmE,QAAQ,CAACpF,MAAM,EAAEC,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAG,EAAG;UAExDoF,KAAK,CAAChF,IAAI,CAAE0D,SAAS,CAAEpB,IAAI,CAACI,SAAS,EAAE,IAAI,CAACqC,QAAQ,CAAEnF,CAAC,CAAG,CAAE,CAAC;QAE9D;QAEAH,MAAM,CAACsF,QAAQ,GAAGC,KAAK;MAExB,CAAC,MAAM;QAENvF,MAAM,CAACsF,QAAQ,GAAGrB,SAAS,CAAEpB,IAAI,CAACI,SAAS,EAAE,IAAI,CAACqC,QAAS,CAAC;MAE7D;IAED;;IAEA;;IAEA,IAAK,IAAI,CAACvK,QAAQ,CAACmF,MAAM,GAAG,CAAC,EAAG;MAE/BF,MAAM,CAACjF,QAAQ,GAAG,EAAE;MAEpB,KAAM,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,QAAQ,CAACmF,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEjDH,MAAM,CAACjF,QAAQ,CAACwF,IAAI,CAAE,IAAI,CAACxF,QAAQ,CAAEoF,CAAC,CAAE,CAACyC,MAAM,CAAEC,IAAK,CAAC,CAAC7C,MAAO,CAAC;MAEjE;IAED;;IAEA;;IAEA,IAAK,IAAI,CAACjD,UAAU,CAACmD,MAAM,GAAG,CAAC,EAAG;MAEjCF,MAAM,CAACjD,UAAU,GAAG,EAAE;MAEtB,KAAM,IAAIoD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpD,UAAU,CAACmD,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnD,MAAMqF,SAAS,GAAG,IAAI,CAACzI,UAAU,CAAEoD,CAAC,CAAE;QAEtCH,MAAM,CAACjD,UAAU,CAACwD,IAAI,CAAE0D,SAAS,CAAEpB,IAAI,CAAC9F,UAAU,EAAEyI,SAAU,CAAE,CAAC;MAElE;IAED;IAEA,IAAK1C,YAAY,EAAG;MAEnB,MAAME,UAAU,GAAGyC,gBAAgB,CAAE5C,IAAI,CAACG,UAAW,CAAC;MACtD,MAAMC,SAAS,GAAGwC,gBAAgB,CAAE5C,IAAI,CAACI,SAAU,CAAC;MACpD,MAAMC,QAAQ,GAAGuC,gBAAgB,CAAE5C,IAAI,CAACK,QAAS,CAAC;MAClD,MAAMC,MAAM,GAAGsC,gBAAgB,CAAE5C,IAAI,CAACM,MAAO,CAAC;MAC9C,MAAMC,MAAM,GAAGqC,gBAAgB,CAAE5C,IAAI,CAACO,MAAO,CAAC;MAC9C,MAAMC,SAAS,GAAGoC,gBAAgB,CAAE5C,IAAI,CAACQ,SAAU,CAAC;MACpD,MAAMtG,UAAU,GAAG0I,gBAAgB,CAAE5C,IAAI,CAAC9F,UAAW,CAAC;MACtD,MAAMuG,KAAK,GAAGmC,gBAAgB,CAAE5C,IAAI,CAACS,KAAM,CAAC;MAE5C,IAAKN,UAAU,CAAC9C,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACC,UAAU,GAAGA,UAAU;MAC3D,IAAKC,SAAS,CAAC/C,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACE,SAAS,GAAGA,SAAS;MACxD,IAAKC,QAAQ,CAAChD,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACG,QAAQ,GAAGA,QAAQ;MACrD,IAAKC,MAAM,CAACjD,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACI,MAAM,GAAGA,MAAM;MAC/C,IAAKC,MAAM,CAAClD,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACK,MAAM,GAAGA,MAAM;MAC/C,IAAKC,SAAS,CAACnD,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACM,SAAS,GAAGA,SAAS;MACxD,IAAKtG,UAAU,CAACmD,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAAChG,UAAU,GAAGA,UAAU;MAC3D,IAAKuG,KAAK,CAACpD,MAAM,GAAG,CAAC,EAAG6C,MAAM,CAACO,KAAK,GAAGA,KAAK;IAE7C;IAEAP,MAAM,CAAC/C,MAAM,GAAGA,MAAM;IAEtB,OAAO+C,MAAM;;IAEb;IACA;IACA;IACA,SAAS0C,gBAAgBA,CAAEC,KAAK,EAAG;MAElC,MAAMC,MAAM,GAAG,EAAE;MACjB,KAAM,MAAMC,GAAG,IAAIF,KAAK,EAAG;QAE1B,MAAMG,IAAI,GAAGH,KAAK,CAAEE,GAAG,CAAE;QACzB,OAAOC,IAAI,CAACtC,QAAQ;QACpBoC,MAAM,CAACpF,IAAI,CAAEsF,IAAK,CAAC;MAEpB;MAEA,OAAOF,MAAM;IAEd;EAED;EAEAzK,KAAKA,CAAE4K,SAAS,EAAG;IAElB,OAAO,IAAI,IAAI,CAACxL,WAAW,CAAC,CAAC,CAAC6D,IAAI,CAAE,IAAI,EAAE2H,SAAU,CAAC;EAEtD;EAEA3H,IAAIA,CAAE4H,MAAM,EAAED,SAAS,GAAG,IAAI,EAAG;IAEhC,IAAI,CAACjL,IAAI,GAAGkL,MAAM,CAAClL,IAAI;IAEvB,IAAI,CAACG,EAAE,CAACmD,IAAI,CAAE4H,MAAM,CAAC/K,EAAG,CAAC;IAEzB,IAAI,CAACG,QAAQ,CAACgD,IAAI,CAAE4H,MAAM,CAAC5K,QAAS,CAAC;IACrC,IAAI,CAACC,QAAQ,CAAC4K,KAAK,GAAGD,MAAM,CAAC3K,QAAQ,CAAC4K,KAAK;IAC3C,IAAI,CAAC3K,UAAU,CAAC8C,IAAI,CAAE4H,MAAM,CAAC1K,UAAW,CAAC;IACzC,IAAI,CAACC,KAAK,CAAC6C,IAAI,CAAE4H,MAAM,CAACzK,KAAM,CAAC;IAE/B,IAAI,CAACY,MAAM,CAACiC,IAAI,CAAE4H,MAAM,CAAC7J,MAAO,CAAC;IACjC,IAAI,CAACC,WAAW,CAACgC,IAAI,CAAE4H,MAAM,CAAC5J,WAAY,CAAC;IAE3C,IAAI,CAACC,gBAAgB,GAAG2J,MAAM,CAAC3J,gBAAgB;IAC/C,IAAI,CAACE,sBAAsB,GAAGyJ,MAAM,CAACzJ,sBAAsB;IAE3D,IAAI,CAACC,qBAAqB,GAAGwJ,MAAM,CAACxJ,qBAAqB;IAEzD,IAAI,CAACE,MAAM,CAACkH,IAAI,GAAGoC,MAAM,CAACtJ,MAAM,CAACkH,IAAI;IACrC,IAAI,CAACjH,OAAO,GAAGqJ,MAAM,CAACrJ,OAAO;IAE7B,IAAI,CAACC,UAAU,GAAGoJ,MAAM,CAACpJ,UAAU;IACnC,IAAI,CAACC,aAAa,GAAGmJ,MAAM,CAACnJ,aAAa;IAEzC,IAAI,CAACC,aAAa,GAAGkJ,MAAM,CAAClJ,aAAa;IACzC,IAAI,CAACC,WAAW,GAAGiJ,MAAM,CAACjJ,WAAW;IAErC,IAAI,CAACC,UAAU,GAAGgJ,MAAM,CAAChJ,UAAU,CAACkJ,KAAK,CAAC,CAAC;IAE3C,IAAI,CAACjJ,QAAQ,GAAGkJ,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEL,MAAM,CAAC/I,QAAS,CAAE,CAAC;IAE/D,IAAK8I,SAAS,KAAK,IAAI,EAAG;MAEzB,KAAM,IAAI3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4F,MAAM,CAAChL,QAAQ,CAACmF,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnD,MAAMiB,KAAK,GAAG2E,MAAM,CAAChL,QAAQ,CAAEoF,CAAC,CAAE;QAClC,IAAI,CAACvB,GAAG,CAAEwC,KAAK,CAAClG,KAAK,CAAC,CAAE,CAAC;MAE1B;IAED;IAEA,OAAO,IAAI;EAEZ;AAED;AAEAb,QAAQ,CAACY,UAAU,GAAG,aAAc,IAAIjC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAC1DqB,QAAQ,CAACgC,0BAA0B,GAAG,IAAI;AAC1ChC,QAAQ,CAACmC,gCAAgC,GAAG,IAAI;AAEhD,SAASnC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}